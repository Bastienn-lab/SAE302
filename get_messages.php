<?php
// ðŸ”¥ Activer l'affichage des erreurs pour le debug
error_reporting(E_ALL);
ini_set('display_errors', 1);

// ðŸ”¥ ParamÃ¨tres de connexion Ã  la base de donnÃ©es
$host = "localhost";  // VÃ©rifie que c'est bien ton hÃ´te MySQL
$dbname = "Discord";  // Nom de ta base de donnÃ©es
$user = "root";       // Ton utilisateur MySQL
$pass = "root";       // Ton mot de passe MySQL

// ðŸ”¥ VÃ©rifier que le paramÃ¨tre "username" est bien reÃ§u
if (!isset($_GET['username'])) {
    die(json_encode(["error" => "ParamÃ¨tre 'username' manquant"]));
}

// RÃ©cupÃ©rer le nom d'utilisateur depuis l'URL
$username = $_GET['username'];

try {
    // ðŸ”¥ Connexion Ã  la base de donnÃ©es avec PDO
    $pdo = new PDO("mysql:host=$host;dbname=$dbname;charset=utf8", $user, $pass);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    die(json_encode(["error" => "Erreur de connexion MySQL : " . $e->getMessage()]));
}

// ðŸ”¥ RequÃªte SQL pour rÃ©cupÃ©rer les messages de l'utilisateur donnÃ©
$sql = "SELECT nom_utilisateur, message, date, receveur FROM messages WHERE nom_utilisateur = :username";
$stmt = $pdo->prepare($sql);
$stmt->bindParam(":username", $username);
$stmt->execute();
$messages = $stmt->fetchAll(PDO::FETCH_ASSOC);

// ðŸ”¥ VÃ©rifier si des messages ont Ã©tÃ© trouvÃ©s
if ($messages) {
    echo json_encode($messages);
} else {
    echo json_encode(["message" => "Aucun message trouvÃ© pour cet utilisateur"]);
}
?>

